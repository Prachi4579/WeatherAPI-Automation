<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="14" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-21T15:07:08Z" name="ListenerExecution" finished-at="2024-06-21T15:07:18Z" duration-ms="9346">
    <groups>
      <group name="TC-01">
        <method signature="AirPollutionAPITest.verifyPostCallAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" name="verifyPostCallAirPollutionEndpoint" class="weather.AirPollutionAPITest"/>
      </group> <!-- TC-01 -->
      <group name="TC_001">
        <method signature="WeatherAPITest.currentWeatherValidKey()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherValidKey" class="weather.WeatherAPITest"/>
      </group> <!-- TC_001 -->
      <group name="TC-006">
        <method signature="Forecast5Day3hourTest.forecast_5Day3Hour()[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" name="forecast_5Day3Hour" class="weather.Forecast5Day3hourTest"/>
      </group> <!-- TC-006 -->
      <group name="TC-007">
        <method signature="Forecast5Day3hourTest.forecast_5Day3HourPUTMethod()[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" name="forecast_5Day3HourPUTMethod" class="weather.Forecast5Day3hourTest"/>
      </group> <!-- TC-007 -->
      <group name="TC-008">
        <method signature="AirPollutionAPITest.verifyAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" name="verifyAirPollutionEndpoint" class="weather.AirPollutionAPITest"/>
      </group> <!-- TC-008 -->
      <group name="TC-009">
        <method signature="AirPollutionAPITest.verifyPutCallAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" name="verifyPutCallAirPollutionEndpoint" class="weather.AirPollutionAPITest"/>
      </group> <!-- TC-009 -->
      <group name="smoke">
        <method signature="AirPollutionAPITest.verifyAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" name="verifyAirPollutionEndpoint" class="weather.AirPollutionAPITest"/>
        <method signature="AirPollutionAPITest.verifyPostCallAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" name="verifyPostCallAirPollutionEndpoint" class="weather.AirPollutionAPITest"/>
        <method signature="AirPollutionAPITest.verifyPutCallAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" name="verifyPutCallAirPollutionEndpoint" class="weather.AirPollutionAPITest"/>
        <method signature="Forecast5Day3hourTest.forecast_5Day3Hour()[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" name="forecast_5Day3Hour" class="weather.Forecast5Day3hourTest"/>
        <method signature="Forecast5Day3hourTest.forecast_5Day3HourPUTMethod()[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" name="forecast_5Day3HourPUTMethod" class="weather.Forecast5Day3hourTest"/>
        <method signature="WeatherAPITest.currentWeatherInValidKey()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherInValidKey" class="weather.WeatherAPITest"/>
        <method signature="WeatherAPITest.currentWeatherInValidLongitude()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherInValidLongitude" class="weather.WeatherAPITest"/>
        <method signature="WeatherAPITest.currentWeatherPUTMethod()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherPUTMethod" class="weather.WeatherAPITest"/>
        <method signature="WeatherAPITest.currentWeatherValidKey()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherValidKey" class="weather.WeatherAPITest"/>
      </group> <!-- smoke -->
      <group name="TC-002">
        <method signature="WeatherAPITest.currentWeatherInValidKey()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherInValidKey" class="weather.WeatherAPITest"/>
      </group> <!-- TC-002 -->
      <group name="sanity">
        <method signature="AirPollutionAPITest.verifyAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" name="verifyAirPollutionEndpoint" class="weather.AirPollutionAPITest"/>
        <method signature="AirPollutionAPITest.verifyPostCallAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" name="verifyPostCallAirPollutionEndpoint" class="weather.AirPollutionAPITest"/>
        <method signature="AirPollutionAPITest.verifyPutCallAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" name="verifyPutCallAirPollutionEndpoint" class="weather.AirPollutionAPITest"/>
        <method signature="Forecast5Day3hourTest.forecast_5Day3Hour()[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" name="forecast_5Day3Hour" class="weather.Forecast5Day3hourTest"/>
        <method signature="Forecast5Day3hourTest.forecast_5Day3HourPUTMethod()[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" name="forecast_5Day3HourPUTMethod" class="weather.Forecast5Day3hourTest"/>
        <method signature="WeatherAPITest.currentWeatherInValidKey()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherInValidKey" class="weather.WeatherAPITest"/>
        <method signature="WeatherAPITest.currentWeatherInValidLongitude()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherInValidLongitude" class="weather.WeatherAPITest"/>
        <method signature="WeatherAPITest.currentWeatherPUTMethod()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherPUTMethod" class="weather.WeatherAPITest"/>
        <method signature="WeatherAPITest.currentWeatherValidKey()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherValidKey" class="weather.WeatherAPITest"/>
      </group> <!-- sanity -->
      <group name="TC-003">
        <method signature="WeatherAPITest.currentWeatherInValidLatitude()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherInValidLatitude" class="weather.WeatherAPITest"/>
      </group> <!-- TC-003 -->
      <group name="TC-004">
        <method signature="WeatherAPITest.currentWeatherInValidLongitude()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherInValidLongitude" class="weather.WeatherAPITest"/>
      </group> <!-- TC-004 -->
      <group name="TC-005">
        <method signature="WeatherAPITest.currentWeatherPUTMethod()[pri:0, instance:weather.WeatherAPITest@ab7395e]" name="currentWeatherPUTMethod" class="weather.WeatherAPITest"/>
      </group> <!-- TC-005 -->
    </groups>
    <test started-at="2024-06-21T15:07:08Z" name="ExecutingListeners" finished-at="2024-06-21T15:07:18Z" duration-ms="9346">
      <class name="weather.Forecast5Day3hourTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" started-at="2024-06-21T15:07:16Z" name="setup" finished-at="2024-06-21T15:07:16Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.Forecast5Day3hourTest.forecast_5Day3Hour() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToURL()[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" started-at="2024-06-21T15:07:16Z" name="goToURL" finished-at="2024-06-21T15:07:16Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToURL -->
        <test-method signature="forecast_5Day3Hour()[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" started-at="2024-06-21T15:07:16Z" name="forecast_5Day3Hour" finished-at="2024-06-21T15:07:17Z" duration-ms="539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forecast_5Day3Hour -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" started-at="2024-06-21T15:07:17Z" name="setup" finished-at="2024-06-21T15:07:17Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.Forecast5Day3hourTest.forecast_5Day3HourPUTMethod()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="forecast_5Day3HourPUTMethod()[pri:0, instance:weather.Forecast5Day3hourTest@50d13246]" started-at="2024-06-21T15:07:17Z" name="forecast_5Day3HourPUTMethod" finished-at="2024-06-21T15:07:18Z" duration-ms="499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forecast_5Day3HourPUTMethod -->
      </class> <!-- weather.Forecast5Day3hourTest -->
      <class name="weather.WeatherAPITest">
        <test-method is-config="true" signature="goToURL()[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:14Z" name="goToURL" finished-at="2024-06-21T15:07:14Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToURL -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:14Z" name="setup" finished-at="2024-06-21T15:07:14Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.WeatherAPITest.currentWeatherValidKey()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="currentWeatherValidKey()[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:14Z" name="currentWeatherValidKey" finished-at="2024-06-21T15:07:14Z" duration-ms="576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currentWeatherValidKey -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:14Z" name="setup" finished-at="2024-06-21T15:07:14Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.WeatherAPITest.currentWeatherInValidKey() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="currentWeatherInValidKey()[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:14Z" name="currentWeatherInValidKey" finished-at="2024-06-21T15:07:15Z" duration-ms="440" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [401] but found [The response code is io.restassured.internal.RestAssuredResponseImpl@205159dc]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [401] but found [The response code is io.restassured.internal.RestAssuredResponseImpl@205159dc]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at weather.WeatherAPITest.currentWeatherInValidKey(WeatherAPITest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currentWeatherInValidKey -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:15Z" name="setup" finished-at="2024-06-21T15:07:15Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.WeatherAPITest.currentWeatherInValidLatitude() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="currentWeatherInValidLatitude()[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:15Z" name="currentWeatherInValidLatitude" finished-at="2024-06-21T15:07:15Z" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currentWeatherInValidLatitude -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:15Z" name="setup" finished-at="2024-06-21T15:07:15Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.WeatherAPITest.currentWeatherInValidLongitude() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="currentWeatherInValidLongitude()[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:15Z" name="currentWeatherInValidLongitude" finished-at="2024-06-21T15:07:16Z" duration-ms="498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currentWeatherInValidLongitude -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:16Z" name="setup" finished-at="2024-06-21T15:07:16Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.WeatherAPITest.currentWeatherPUTMethod() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="currentWeatherPUTMethod()[pri:0, instance:weather.WeatherAPITest@ab7395e]" started-at="2024-06-21T15:07:16Z" name="currentWeatherPUTMethod" finished-at="2024-06-21T15:07:16Z" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currentWeatherPUTMethod -->
      </class> <!-- weather.WeatherAPITest -->
      <class name="weather.AirPollutionAPITest">
        <test-method is-config="true" signature="suiteSetUp()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" started-at="2024-06-21T15:07:08Z" name="suiteSetUp" finished-at="2024-06-21T15:07:08Z" duration-ms="445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteSetUp -->
        <test-method is-config="true" signature="goToURL()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" started-at="2024-06-21T15:07:08Z" name="goToURL" finished-at="2024-06-21T15:07:09Z" duration-ms="586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToURL -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" started-at="2024-06-21T15:07:09Z" name="setup" finished-at="2024-06-21T15:07:09Z" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.AirPollutionAPITest.verifyAirPollutionEndpoint()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" started-at="2024-06-21T15:07:09Z" name="verifyAirPollutionEndpoint" finished-at="2024-06-21T15:07:12Z" duration-ms="3163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAirPollutionEndpoint -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" started-at="2024-06-21T15:07:12Z" name="setup" finished-at="2024-06-21T15:07:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.AirPollutionAPITest.verifyPutCallAirPollutionEndpoint()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPutCallAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" started-at="2024-06-21T15:07:12Z" name="verifyPutCallAirPollutionEndpoint" finished-at="2024-06-21T15:07:13Z" duration-ms="995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPutCallAirPollutionEndpoint -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" started-at="2024-06-21T15:07:13Z" name="setup" finished-at="2024-06-21T15:07:13Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void weather.AirPollutionAPITest.verifyPostCallAirPollutionEndpoint()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPostCallAirPollutionEndpoint()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" started-at="2024-06-21T15:07:13Z" name="verifyPostCallAirPollutionEndpoint" finished-at="2024-06-21T15:07:14Z" duration-ms="639" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [405] but found [401]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [405] but found [401]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at weather.Parameter.assertResponse(Parameter.java:103)
at weather.AirPollutionAPITest.verifyPostCallAirPollutionEndpoint(AirPollutionAPITest.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPostCallAirPollutionEndpoint -->
        <test-method is-config="true" signature="suiteTearDown()[pri:0, instance:weather.AirPollutionAPITest@3f9342d4]" started-at="2024-06-21T15:07:18Z" name="suiteTearDown" finished-at="2024-06-21T15:07:18Z" duration-ms="642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteTearDown -->
      </class> <!-- weather.AirPollutionAPITest -->
    </test> <!-- ExecutingListeners -->
  </suite> <!-- ListenerExecution -->
</testng-results>
